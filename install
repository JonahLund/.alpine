#!/bin/sh

# Exit on any error
set -e

# Check if sudo is available
command -v sudo > /dev/null 2>&1 || { echo >&2 "The script requires 'sudo' but it's not installed.  Aborting."; exit 1; }

# Function to add a user to groups if not already added
add_user_to_group() {
    for group in "$@"; do
        if ! id -nG "$USER" | grep -qw "$group"; then
            sudo adduser "$USER" "$group"
        fi
    done
}

# Install Development Essentials
echo "Installing Development Essentials..."
sudo apk add build-base cmake git fontconfig-dev polkit libxkbcommon-dev libxkbfile-dev libressl-dev

# Install Audio/Video related packages
echo "Installing Audio/Video related packages..."
sudo apk add pipewire pipewire-pulse linux-firmware-amdgpu mesa mesa-dri-gallium mesa-va-gallium mesa-vulkan-ati

# Install Wayland/Sway related packages
echo "Installing Wayland/Sway related packages..."
sudo apk add wayland xwayland wl-clipboard sway swaylock swaybg swayidle

# Install DBUS/Seatd
echo "Insalling DBUS/seatd packages..."
sudo apk add udev dbus cmd:dbus-launch dbus-openrc dbus-libs dbus-daemon-launch-helper seatd cmd:seatd-launch pipewire wireplumber pipewire-pulse

# Install Developer tools
echo "Installing Developer tools..."
sudo apk add helix ripgrep rustup nodejs-current yarn sccache taplo

# Install Applications
echo "Installing Applications..."
sudo apk add firefox alacritty tmux grim grimshot mpv imv

# Install Fonts
echo "Installing Fonts..."
sudo apk add font-jetbrains-mono-nerd font-ipa font-noto

# Install rust
echo "Installing Rust..."
rustup-init -y --default-toolchain stable
. "$HOME/.cargo/env"
. "$HOME/.alpine/dotfiles/.profile"

# Install cargo binaries
echo "Installing Cargo binaries..."
cargo install kickoff dotlink --locked

# Create directories
mkdir ~/Screenshots
mkdir ~/Code
mkdir ~/Recordings

# Link dotfiles
echo "Linking dotfiles..."
mkdir -p ~/.config
rm -rf ~/.profile
cd dotfiles && dotlink -p linux --file ../dotlink.toml

# Install LSPs
sudo npm i -g typescript typescript-language-server vscode-langservers-extracted prettier
rustup component add rust-analyzer

# Setup services
echo "Setting up services..."
echo amdgpu | sudo tee -a /etc/modules
echo fbcon | sudo tee -a /etc/modules
sudo setup-devd udev
echo $(sudo dbus-uuidgen) | sudo tee /var/lib/dbus/machine-id >/dev/null
sudo rc-update add dbus
sudo rc-update add seatd default

# Add user to groups
echo "Adding user to groups..."
add_user_to_group input video seat

# Setup helix
hx --grammar fetch
hx --grammar build

echo "Installation completed!"
